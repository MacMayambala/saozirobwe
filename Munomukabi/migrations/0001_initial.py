# Generated by Django 5.1.1 on 2025-06-23 15:40

import Munomukabi.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Customer', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CronJobStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('running', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Parish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscription_start', models.DateField(blank=True, null=True, validators=[Munomukabi.models.validate_future_date])),
                ('subscription_end', models.DateField(blank=True, null=True)),
                ('renewal_count', models.PositiveIntegerField(default=1)),
                ('last_renewal_date', models.DateField(blank=True, null=True)),
                ('spouse_name', models.CharField(blank=True, max_length=100, null=True)),
                ('spouse_status', models.CharField(blank=True, choices=[('dd', 'Deceased'), ('LV', 'Alive')], max_length=10, null=True)),
                ('spouse_address', models.CharField(blank=True, max_length=200, null=True)),
                ('mother_name', models.CharField(blank=True, max_length=100, null=True)),
                ('mother_village', models.CharField(blank=True, max_length=100, null=True)),
                ('mother_status', models.CharField(blank=True, choices=[('dd', 'Deceased'), ('LV', 'Alive')], max_length=10, null=True)),
                ('mother_guardian', models.CharField(blank=True, max_length=100, null=True)),
                ('mother_guardian_address', models.CharField(blank=True, max_length=200, null=True)),
                ('father_name', models.CharField(blank=True, max_length=100, null=True)),
                ('father_village', models.CharField(blank=True, max_length=100, null=True)),
                ('father_status', models.CharField(blank=True, choices=[('dd', 'Deceased'), ('LV', 'Alive')], max_length=10, null=True)),
                ('father_guardian', models.CharField(blank=True, max_length=100, null=True)),
                ('father_guardian_address', models.CharField(blank=True, max_length=200, null=True)),
                ('child1_name', models.CharField(blank=True, max_length=100, null=True)),
                ('child2_name', models.CharField(blank=True, max_length=100, null=True)),
                ('next_of_kin_Name', models.CharField(max_length=100)),
                ('next_of_kin_relationship', models.CharField(max_length=50)),
                ('next_of_kin_village', models.CharField(max_length=100)),
                ('next_of_kin_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('sao_officer', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('active', 'Active'), ('expired', 'Expired'), ('archived', 'Archived')], default='active', max_length=10)),
                ('payment_date', models.DateField()),
                ('payment_number', models.CharField(max_length=50, unique=True)),
                ('booklet_number', models.CharField(max_length=50, unique=True)),
                ('teller', models.CharField(max_length=100)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('modification_date', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='Customer.customer')),
            ],
        ),
        migrations.CreateModel(
            name='ServedMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_given', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reason', models.TextField()),
                ('date_served', models.DateTimeField(default=django.utils.timezone.now)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Munomukabi.member')),
                ('served_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='served_members', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Village',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('parish', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Munomukabi.parish')),
            ],
        ),
        migrations.AddField(
            model_name='parish',
            name='zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Munomukabi.zone'),
        ),
        migrations.AddConstraint(
            model_name='member',
            constraint=models.UniqueConstraint(condition=models.Q(('status', 'active')), fields=('customer',), name='unique_active_member_per_customer'),
        ),
    ]
